module MTran_Lab4_Verilog_7SegmentLed (
    input [9:0] SW,
    input [2:0] BT,
    output reg [7:0] LED,
    output reg [6:0] HEX0,
    output reg [6:0] HEX1,
    output reg [6:0] HEX2,
    output reg [6:0] HEX3
);

    // Variable declaration
    reg num1_flag, add_flag;
    integer hundred, tenth, unit;
    integer err, err_sum, digit0, digit1, digit2, digit3, num1, num2, result;

    initial begin
        num1_flag = 0;
        add_flag = 0;
        hundred = 0;
        tenth = 0;
        unit = 0;
        err = 0;
        err_sum = 0;
        digit0 = 0;
        digit1 = 0;
        digit2 = 0;
        digit3 = 0;
        num1 = 0;
        num2 = 0;
        result = 0;
    end

    // Function Declaration
	 
	 // Displaying 7 segment function
    function [6:0] SevenSegmentDisplay;
        input [3:0] Switch;
        begin
            case (Switch)
                4'b0000: SevenSegmentDisplay = 7'b1000000;
                4'b0001: SevenSegmentDisplay = 7'b1111001;
                4'b0010: SevenSegmentDisplay = 7'b0100100;
                4'b0011: SevenSegmentDisplay = 7'b0110000;
                4'b0100: SevenSegmentDisplay = 7'b0011001;
                4'b0101: SevenSegmentDisplay = 7'b0010010;
                4'b0110: SevenSegmentDisplay = 7'b0000010;
                4'b0111: SevenSegmentDisplay = 7'b1111000;
                4'b1000: SevenSegmentDisplay = 7'b0000000;
                4'b1001: SevenSegmentDisplay = 7'b0010000;
                4'b1010: SevenSegmentDisplay = 7'b0001000;
                4'b1011: SevenSegmentDisplay = 7'b0000011;
                4'b1100: SevenSegmentDisplay = 7'b1000110;
                4'b1101: SevenSegmentDisplay = 7'b0100001;
                4'b1110: SevenSegmentDisplay = 7'b0000110;
                4'b1111: SevenSegmentDisplay = 7'b0001110;
                default: SevenSegmentDisplay = 7'b1111111;
            endcase
        end
    endfunction

    // Function to display a digit on 7-segment display
    function [6:0] DigitDisplay;
        input [3:0] Switch;
        input integer dig;
        begin
            if (dig <= 9) begin
                DigitDisplay = SevenSegmentDisplay(Switch);
            end else begin
                err = err + 1;
                DigitDisplay = SevenSegmentDisplay(4'b1111);
            end
        end
    endfunction

    // Main code
    always @(SW or BT) begin
        // Reset 
        err = 0;
        
        // SW9 to change different assignment
        if (SW[9] == 1'b0) begin
            HEX3 = 7'b1111111;
            HEX2 = 7'b1111111;
            HEX1 = 7'b1111111;
            HEX0 = SevenSegmentDisplay(SW[3:0]);
        end else begin
            // Displaying number 1 and number 2
            if (!add_flag) begin
                if (!num1_flag) begin
                    digit0 = SW[3:0];
                    HEX0 = DigitDisplay(SW[3:0], digit0);
                    
                    digit1 = SW[7:4];
                    HEX1 = DigitDisplay(SW[7:4], digit1);
                    
                    // Turn off HEX2 and HEX3
                    HEX2 = 7'b1111111;
                    HEX3 = 7'b1111111;
                end else begin
                    digit2 = SW[3:0];
                    HEX2 = DigitDisplay(SW[3:0], digit2);
                    
                    digit3 = SW[7:4];
                    HEX3 = DigitDisplay(SW[7:4], digit3);
                    
                    // Turn off HEX0 and HEX1
                    HEX1 = 7'b1111111;
                    HEX0 = 7'b1111111;
                end
            end
        end
        
        // BT0 to confirm number    
        if (BT[0] == 1'b1) begin
            if (!num1_flag) begin
                num1_flag = 1;
                if (err == 0) begin
                    num1 = digit1 * 10 + digit0;
                end else begin
                    LED[3:0] = 4'b1111;
                    err_sum = err_sum + 1;
                end
            end else begin
                num1_flag = 0;
                add_flag = 1;
                if (err == 0) begin
                    num2 = digit3 * 10 + digit2;
                end else begin
                    LED[7:4] = 4'b1111;
                    err_sum = err_sum + 1;
                end                
            end
        end
        
        // Add up 2 number then display
        if (BT[1] == 1'b0 && add_flag) begin
            result = num1 + num2;
            hundred = result / 100;
            tenth   = (result / 10) % 10;
            unit    = result % 10;
            if (result >= 100) begin 
                HEX3 = 7'b1111111;
                HEX2 = SevenSegmentDisplay(hundred);
                HEX1 = SevenSegmentDisplay(tenth);
                HEX0 = SevenSegmentDisplay(unit);
            end else if (result >= 10) begin
                HEX3 = 7'b1111111;
                HEX2 = 7'b1111111;
                HEX1 = SevenSegmentDisplay(tenth);
                HEX0 = SevenSegmentDisplay(unit);
            end else begin
                HEX3 = 7'b1111111;
                HEX2 = 7'b1111111;
                HEX1 = 7'b1111111;
                HEX0 = SevenSegmentDisplay(unit);
            end
            
            // Check if error
            if (err_sum > 0) begin
                HEX3 = 7'b1111111;
                HEX2 = 7'b0000110; //E
                HEX1 = 7'b0101111; //r
                HEX0 = 7'b0101111; //r
            end
        end
        
        // Reset
        if (BT[2] == 1'b0) begin
            add_flag = 0;
            num1_flag = 0;
            err_sum = 0;
            LED = 8'b00000000;
            HEX3 = 7'b1111111;
            HEX2 = 7'b1111111;
            HEX1 = 7'b1111111;
            HEX0 = 7'b1111111;
        end
    end
endmodule
